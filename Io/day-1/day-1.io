// 1. 对 1+1 求值， 然后对 1+ "one" 求值。Io 是强类型还是弱类型? 用代码证实你的答案。

//  Io 是一种强类型语言。运行 1+"one" 时，抛出了异常，说明 Io 不会自动将 1 转换为字符串，因此，Io 是强类型语言。

// 2. 0 是 true 还是 false? 空字符串是 true 还是 false? nil 是 true 还是 false? 用代码证实你的答案。

// 0 是 true, 空字符串是 true, nil 是 false

// 3. 如何知道某个原型都支持哪些槽?

// slotNames 方法

// 4. =、:=、::= 之间有何区别？你会在什么情况下使用它们？

// =	如果槽存在则赋值给槽，否则抛出异常
// :=	创建插槽，分配值
// ::=	创建插槽，创建设置器，分配值

// 5. 从文件中运行 Io 程序

// io  day-1.io

// 6. 给定槽的名称，执行该槽中的代码

hello := method("hello world" println)
hello

// 7. 理解原型的运行方式

// 在 Io 中，一切都是对象（包括块的本地存储和命名空间本身），所有操作都是消息（包括赋值）。
// 对象由称为槽的键/值对列表和它们从中继承的称为原型的对象的内部列表组成。
// 槽的键是一个符号（一个唯一的不可变序列），它的值可以是任何类型的对象。
